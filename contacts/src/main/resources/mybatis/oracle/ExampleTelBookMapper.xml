<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yonyou.iuap.example.contacts.dao.ExampleTelBookMapper">

	<resultMap id="BaseResultMap" type="com.yonyou.iuap.example.contacts.entity.ExampleTelBook">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="institid" property="institid" jdbcType="VARCHAR" />
		<result column="peoname" property="peoname" jdbcType="VARCHAR" />
		<result column="peocode" property="peocode" jdbcType="VARCHAR" />
		<result column="institname" property="institname" jdbcType="VARCHAR" />
		<result column="worktel" property="worktel" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="office" property="office" jdbcType="VARCHAR" />
		<result column="countryzone" property="countryzone" jdbcType="VARCHAR" />
		<result column="ts" property="ts" jdbcType="TIMESTAMP" />
		<result column="dr" property="dr" jdbcType="NUMERIC" />
	</resultMap>

	<sql id="Base_Column_List">
		id,institid,peoname,peocode,worktel,email,sex,tel,office,countryzone,ts,dr
	</sql>

	<select id="findByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from example_telbook
		where peocode= #{peocode,jdbcType=VARCHAR}
	</select>

	<select id="findByid" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from example_telbook
		where institid= #{institid,jdbcType=VARCHAR}
	</select>


	<select id="selectAllByPage" resultMap="BaseResultMap"
		resultType="java.util.List">
		SELECT
		<include refid="Base_Column_List" />
		from example_telbook where 1=1 and institid in
		<foreach collection="search.ids" item="item" index="index"
			separator="," open="(" close=")">
			#{search.ids[${index}],jdbcType=VARCHAR}
		</foreach>
		<if test="search != null">
			<if test="search.searchParam!=null and search.searchParam!='' ">
				and peoname like CONCAT(CONCAT('%',
				#{search.searchParam}),'%')
				or peocode like CONCAT(CONCAT('%', #{search.searchParam}),'%')
				or tel
				like CONCAT(CONCAT('%', #{search.searchParam}),'%')
				or email like
				CONCAT(CONCAT('%', #{search.searchParam}),'%')
			</if>
		</if>
	</select>


	<delete id="batchDelete" parameterType="java.util.List">
		delete from example_telbook
		where
		id in
		<foreach collection="list" item="item" index="index"
			separator="," open="(" close=")">
			#{item.id,jdbcType=VARCHAR}
		</foreach>
	</delete>



	<insert id="batchInsert" parameterType="java.util.List">
		insert into
		example_telbook(id,institid,peocode,institname,peoname,worktel,email,sex,tel,office,countryzone,ts,dr)

		<foreach collection="list" item="item" index="index"
			separator="union" open="(" close=")">
			select
			#{item.id,jdbcType=VARCHAR},
			#{item.institid,jdbcType=VARCHAR},
			#{item.peocode,jdbcType=VARCHAR},
			#{item.institname,jdbcType=VARCHAR},
			#{item.peoname,jdbcType=VARCHAR},
			#{item.worktel,jdbcType=VARCHAR},
			#{item.email,jdbcType=VARCHAR},
			#{item.sex,jdbcType=VARCHAR},
			#{item.tel,jdbcType=VARCHAR},
			#{item.office,jdbcType=VARCHAR},
			#{item.countryzone,jdbcType=VARCHAR},
			#{item.ts,jdbcType=TIMESTAMP},
			#{item.dr,jdbcType=NUMERIC}
			from dual
		</foreach>
	</insert>

	<update id="batchUpdate" parameterType="java.util.List">

		<foreach collection="list" item="item" index="index" open=""
			close="" separator=";">
			update example_telbook
			<set>
				id=#{item.id,jdbcType=VARCHAR},
				institid=#{item.institid,jdbcType=VARCHAR},
				peocode=#{item.peocode,jdbcType=VARCHAR},
				institname=#{item.institname,jdbcType=VARCHAR},
				peoname=#{item.peoname,jdbcType=VARCHAR},
				worktel=#{item.worktel,jdbcType=VARCHAR},
				email=#{item.email,jdbcType=VARCHAR},
				sex=#{item.sex,jdbcType=VARCHAR},
				tel=#{item.tel,jdbcType=VARCHAR},
				office=#{item.office,jdbcType=VARCHAR},
				countryzone=#{item.countryzone,jdbcType=VARCHAR},
				ts=#{item.ts,jdbcType=TIMESTAMP},
				dr=#{item.dr,jdbcType=NUMERIC}
			</set>
			where id = #{item.id,jdbcType=VARCHAR}
		</foreach>

	</update>





</mapper>